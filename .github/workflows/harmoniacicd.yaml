name: Android Code Coverage

on:
  push:
    branches:
      - master
      - feature/*

jobs:
  code-coverage:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup JDK
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '20'

      - name: Create config.properties
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> config.properties
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> config.properties
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> config.properties
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> config.properties

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Step 4: Run tests and generate Jacoco report
      - name: Run tests with Jacoco
        run: ./gradlew clean test jacocoTestReport

      # Step 5: Upload Jacoco report to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: core/build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          fail_ci_if_error: true

      # Step 6: Upload coverage report as artifact (optional)
      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: core/build/reports/jacoco/test/html/
